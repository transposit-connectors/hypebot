{
  "v2": {
    "transposit": {
      "dependencies": [{
        "name": "sarah/merriam_webster:latest",
        "alias": "merriam_webster_dict"
      }, {
        "name": "sarah/merriam_webster:latest",
        "alias": "merriam_webster_thes"
      }, {
        "name": "transposit/slack:v1.*.*",
        "alias": "slack"
      }, {
        "name": "sarah/raw_slack_bot:latest",
        "alias": "raw_slack_bot"
      }, {
        "name": "transposit/slack:v1.*.*",
        "alias": "slackbot"
      }],
      "operations": [{
        "id": "def_and_syn",
        "tql": {
          "parameters": [{
            "name": "word",
            "type": "STRING"
          }],
          "tql": "\nSELECT meta.id, meta.uuid, hwi.hw, fl, syns, shortdef FROM merriam_webster_dict.collegiate_dictionary_search\n  WHERE word=@word LIMIT 3 /* if it's not in the first 3, it'll probably never happen*/",
          "cacheExpirySec": 86400
        }
      }, {
        "id": "extract_syn",
        "function": {
          "parameters": [{
            "name": "dict_results",
            "type": "ARRAY"
          }],
          "js": "extract_syn.js"
        }
      }, {
        "id": "collegiate_thesaurus_search",
        "tql": {
          "parameters": [{
            "name": "word",
            "type": "STRING"
          }],
          "tql": "SELECT meta.syns FROM merriam_webster_thes.collegiate_thesaurus_search\n  WHERE word=@word expand by meta.syns LIMIT 3"
        }
      }, {
        "id": "sentence_seeker",
        "function": {
          "parameters": [{
            "name": "sentence",
            "type": "STRING"
          }, {
            "name": "hype_level",
            "default": {
              "text": "3"
            },
            "type": "STRING"
          }],
          "js": "sentence_seeker.js"
        }
      }, {
        "id": "filtered_def_and_syn",
        "tql": {
          "parameters": [{
            "name": "word",
            "type": "STRING"
          }],
          "tql": "SELECT * FROM this.def_and_syn\n  WHERE word=@word AND fl != \"indefinite article\" AND fl != \"definite article\" AND fl != \"preposition\" AND fl != \"conjunction\" AND fl != \"abbreviation\" AND fl != \"prefix\" AND fl != \"noun suffix\" AND fl != \"adjective suffix\" AND fl !=\"combining form\""
        }
      }, {
        "id": "webhook",
        "function": {
          "parameters": [{
            "name": "http_event",
            "default": {
              "text": "{\"http_method\": \"GET\", \"query_parameters\": {}, \"headers\": {}, \"body\": \"\"}"
            },
            "type": "OBJECT"
          }, {
            "name": "hype_level",
            "default": {
              "text": "3"
            },
            "type": "INTEGER"
          }],
          "js": "webhook.js"
        },
        "access": {
          "requireApiKey": true,
          "webhook": true
        }
      }, {
        "id": "emoji_shortcodes",
        "function": {
          "js": "emoji_shortcodes.js",
          "cacheExpirySec": 86400
        }
      }, {
        "id": "word_search2",
        "function": {
          "parameters": [{
            "name": "word",
            "type": "STRING"
          }],
          "js": "word_search2.js"
        }
      }, {
        "id": "add_reactions",
        "tql": {
          "parameters": [{
            "name": "name",
            "type": "STRING"
          }, {
            "name": "channel",
            "type": "STRING"
          }, {
            "name": "ts",
            "type": "STRING"
          }],
          "tql": "SELECT * FROM slackbot.add_reactions\n  WHERE $body=(SELECT {\n    'name' : @name,\n    'channel' : @channel,\n    'timestamp' : @ts\n  })"
        }
      }, {
        "id": "list_emoji",
        "tql": {
          "tql": "SELECT * FROM slack.list_emoji"
        }
      }, {
        "id": "users_with_hype",
        "function": {
          "js": "users_with_hype.js"
        }
      }, {
        "id": "positive_affirmation",
        "function": {
          "js": "positive_affirmation.js"
        }
      }, {
        "id": "word_search",
        "function": {
          "js": "word_search.js"
        }
      }],
      "dataConnections": [{
        "ref": "emojidex",
        "overrides": {
          "swagger": {
            "executionLimits": {
              "maxApiCalls": 5000
            }
          }
        }
      }, {
        "ref": "slack.raw",
        "overrides": {
          "swagger": {
            "oauthConfig": {
              "scope": "bot"
            },
            "executionLimits": {
            }
          }
        }
      }, {
        "ref": "slackbot.raw",
        "overrides": {
          "swagger": {
            "oauthConfig": {
              "scope": "bot",
              "accessTokenPath": "bot.bot_access_token"
            },
            "executionLimits": {
            }
          }
        }
      }],
      "javascriptAPIVersion": "3"
    }
  }
}